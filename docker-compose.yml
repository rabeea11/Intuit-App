#version: '3'
#services:
#  intuit-app:
#    container_name: message-server
#    build:
#      context: docker-message-server
#      dockerfile: Dockerfile
#    image: message-server:latest
#    ports:
#      - 18888:8888
#    networks:
#      - spring-cloud-network
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.3.0
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  broker:
#    image: confluentinc/cp-kafka:7.3.0
#    container_name: broker
#    ports:
#    # To learn about configuring Kafka for access across networks see
#    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#  db:
#    image: mysql:5.7
#    restart: always
#    platform: linux/amd64
#    environment:
#      MYSQL_DATABASE: 'db'
#      # So you don't have to use root, but you can if you like
#      MYSQL_USER: 'user'
#      # You can use whatever password you like
#      MYSQL_PASSWORD: 'password'
#      # Password for root access
#      MYSQL_ROOT_PASSWORD: 'password'
#    ports:
#      # <Port exposed> : < MySQL Port running inside container>
#      - '3306:3306'
#    expose:
#      # Opens port 3306 on the container
#      - '3306'
#      # Where our data will be persisted
#    volumes:
#      - my-db:/var/lib/mysql
#volumes:
#  my-db:
